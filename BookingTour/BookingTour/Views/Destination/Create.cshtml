@model Presentation.Models.DestinationViewModel
@{
    ViewData["Title"] = "Thêm địa điểm mới";
    Layout = "_ContentLayout";

    
}

<div class="page-header">
    <h3 class="fw-bold mb-3">Thêm Địa Điểm Mới</h3>
    <ul class="breadcrumbs mb-3">
        <li class="nav-home">
            <a asp-asp-controller="HomeController"
               asp-action="Index">
                <i class="icon-home"></i>
            </a>
        </li>
        <li class="separator">
            <i class="icon-arrow-right"></i>
        </li>
        <li class="nav-item">
            <a asp-controller="Destination"
               asp-action="Index">
                Địa điểm
            </a>
        </li>
        <li class="separator">
            <i class="icon-arrow-right"></i>
        </li>
        <li class="nav-item">
            Create
        </li>

    </ul>
</div>

<form asp-action="Create" method="post">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="form-group">
        <label asp-for="Name" class="form-label"></label>
        <input asp-for="Name" type="text" class="form-control" id="Name" name="Name" required>
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="City" class="form-label"></label>
        <select asp-for="City" id="City" name="City"  class="form-select" required>
            <option value="">Chọn Thành Phố</option>
            
        </select>
        <span asp-validation-for="City" class="text-danger"></span>
    </div>

     <div class="form-group">
         <label asp-for="District" class="form-label"></label>
        <select asp-for="District" id="District" name="District" class="form-select" disabled>
             <option value="">Chọn Quận/Huyện</option>
         </select>
         <span asp-validation-for="District" class="text-danger"></span>
     </div>

     <div class="form-group">
         <label asp-for="Ward" class="form-label"></label>
        <select asp-for="Ward" id="Ward" name="Ward" class="form-select" disabled>
             <option value="">Chọn Phường/Xã</option>
         </select>
         <span asp-validation-for="Ward" class="text-danger"></span>
     </div>

    <div class="form-group">
        <label asp-for="Description" class="form-label"></label>
        <input asp-for="Description" type="text" class="form-control" id="Description" name="Description" required>
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>

    <div class="form-group d-none">
        <label asp-for="Country" class="form-label"></label>
        <input asp-for="Country" type="text" class="form-control" id="Country" name="Country"  value="Việt Nam">
        <span asp-validation-for="Country" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Category" class="form-label"></label>
        <select asp-for="Category" class="form-select" id="Category" name="Category">
            <option value="" disabled selected>-- Chọn loại địa điểm --</option>
            <option value="Mountain">Núi</option>
            <option value="Beach">Biển</option>
        </select>
        <span asp-validation-for="Category" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-primary">Lưu</button>
    <a asp-controller="Destination" asp-action="Index" class="btn btn-secondary">Hủy</a>
</form>


@section script {
    <script>
        $(document).ready(function () {
            $('.toggle-password').on('click', function () {
                // Lấy ID của trường mật khẩu tương ứng từ thuộc tính data-target
                var passwordInput = $($(this).data('target'));
                var icon = $(this).find('i');

                // Thay đổi thuộc tính 'type' và biểu tượng của icon
                if (passwordInput.attr('type') === 'password') {
                    passwordInput.attr('type', 'text');
                    icon.removeClass('fa-eye').addClass('fa-eye-slash'); // Đổi biểu tượng
                } else {
                    passwordInput.attr('type', 'password');
                    icon.removeClass('fa-eye-slash').addClass('fa-eye'); // Đổi lại biểu tượng
                }
            });
        });
    </script>

        <script>
            $(document).ready(function () {
                // Truyền dữ liệu vào JavaScript từ ViewData
                var cities = @Html.Raw(Json.Serialize(ViewData["Cities"]));
                // Khi trang được tải, populate thành phố
                cities.forEach(function (city) {
                    $('#City').append(`<option value="${city.code}">${city.name}</option>`);
                });

                // Khi chọn thành phố
                $('#City').change(function () {
                    var cityCode = $(this).val();

                    // Clear district and ward dropdowns
                    $('#District').empty().append('<option value="">Chọn Quận/Huyện</option>').prop('disabled', false);
                    $('#Ward').empty().append('<option value="">Chọn Phường/Xã</option>').prop('disabled', true);

                    if (cityCode) {
                        // Lấy danh sách quận từ thành phố đã chọn
                        var selectedCity = cities.find(city => city.code === cityCode);
                        // Kiểm tra nếu districts là đối tượng thay vì mảng
                        var districts = Array.isArray(selectedCity.district) ? selectedCity.district : Object.values(selectedCity.district);

                        // Lặp qua danh sách quận
                        districts.forEach(function (district) {
                            $('#District').append(`<option value="${district.name}">${district.name}</option>`);
                        });
                    }
                });

                // Khi chọn quận
                $('#District').change(function () {
                    var cityCode = $('#City').val();
                    var districtName = $(this).val();

                    // Clear ward dropdown
                    $('#Ward').empty().append('<option value="">Chọn Phường/Xã</option>').prop('disabled', false);

                    if (districtName) {
                        var selectedCity = cities.find(city => city.code === cityCode);
                        var selectedDistrict = selectedCity.district.find(district => district.name === districtName);

                        // Kiểm tra nếu districts là đối tượng thay vì mảng
                        if (selectedDistrict && selectedDistrict.ward) {
                            var wards = Array.isArray(selectedDistrict.ward) ? selectedDistrict.ward : Object.values(selectedDistrict.ward);

                            // Populate wards
                            wards.forEach(function (ward) {
                                $('#Ward').append(`<option value="${ward.name}">${ward.name}</option>`);
                            });
                        }
                    }
                });

            });
        </script>
}